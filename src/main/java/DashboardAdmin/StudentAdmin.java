/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DashboardAdmin;

import Dashboard.Subject;
import Login.Database;
import Resource.HoverAnimation;
import SessionID.*;
import java.awt.BorderLayout;
import java.awt.Frame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class StudentAdmin extends javax.swing.JFrame {

    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    String section;
    String id;
    String first;
    String middle;
    String last;
    String subjectname;

    public StudentAdmin() {
        initComponents();
        conn = Database.conn();
        ImageIcon logo = new ImageIcon(getClass().getResource("/Resource/aclclogo.png")); // image
        jimage.setIcon(logo);
        ImageIcon icon = new ImageIcon(getClass().getResource("/Resource/aclcicon.png"));
        setIconImage(icon.getImage());
        tablestudent();//displaying data in Jtable
        HoverAnimation.HoverAnimationSection(jaddstudent);//HoverAnimation class from resource package
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setWidth(0);
    }

    StudentAdmin(String subjectname, String section, String id, String first, String middle, String last) {
        this();
        jsubjectname.setText(subjectname);
        jsectionname.setText(section);
        this.subjectname = subjectname;
        this.section = section;
        this.id = id;
        this.first = first;
        this.middle = middle;
        this.last = last;

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                new SubjectAdmin(section, id, first, middle, last).setVisible(true);
                dispose();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jback = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jsubjectname = new javax.swing.JLabel();
        jimage = new javax.swing.JLabel();
        jsectionname = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jaddstudent = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Student's Grade");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 90, 172));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Student ID", "Student", "Course", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 830, 660));

        jback.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jback.setText("Back");
        jback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbackActionPerformed(evt);
            }
        });
        getContentPane().add(jback, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 693, 110, 50));

        jPanel1.setBackground(new java.awt.Color(0, 90, 172));

        jsubjectname.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jsubjectname.setText("Subject(NAME)");

        jimage.setText("jLabel1");

        jsectionname.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jsectionname.setText("Section(name)");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setText("|");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setText("Assigning Student");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jimage, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jsectionname)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jsubjectname))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(jLabel3)))
                .addContainerGap(207, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jsubjectname)
                            .addComponent(jsectionname)
                            .addComponent(jLabel2)))
                    .addComponent(jimage, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 140));

        jPanel2.setBackground(new java.awt.Color(0, 71, 171));

        jaddstudent.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jaddstudent.setText("Add Student");
        jaddstudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jaddstudentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jaddstudent, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jaddstudent, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(578, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 110, 170, 690));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyTyped

    }//GEN-LAST:event_jTable1KeyTyped

    private void jaddstudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jaddstudentActionPerformed
        List<String> studentList = new ArrayList<>();
        Map<String, Integer> nameToIdMap = new HashMap<>();

        try {
            String sql = """ 
        SELECT s.StudentID,
               CONCAT(
                   COALESCE(s.FirstName, ''),
                   ' ',
                   COALESCE(s.MiddleName, ''),
                   ' ',
                   COALESCE(s.LastName, '')
               ) AS FullName
        FROM student s
        WHERE s.StudentID NOT IN (
            SELECT ss.StudentID
            FROM studentsubject ss
            WHERE ss.SubjectID = ?
        )
    """; // Get all students not yet assigned to the subject (ignores SectionID)

            pst = conn.prepareStatement(sql);
            pst.setInt(1, SessionSubject.SubjectID); // Only set SubjectID

            rs = pst.executeQuery();

            while (rs.next()) {
                int ID = rs.getInt("StudentID");
                String name = rs.getString("FullName");
                if (name == null) {
                    name = "";
                }
                name = name.replaceAll("\\s+", " ").trim();
                studentList.add(name);
                nameToIdMap.put(name, ID);
            }

            if (studentList.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No students available to assign.");
                return;
            }

            String selectedStudent = showSearchableStudentDialog(studentList);

            if (selectedStudent != null) {
                int studentId = nameToIdMap.get(selectedStudent);

                // Fetch the latest StudentCode from the database
                int studentCode = 1000; // Default starting value
                String fetchSql = "SELECT MAX(StudentCode) FROM studentsubject";
                try (PreparedStatement pstFetch = conn.prepareStatement(fetchSql); ResultSet rsFetch = pstFetch.executeQuery()) {
                    if (rsFetch.next()) {
                        studentCode = rsFetch.getInt(1) + 1; // Increment by 1
                    }
                }

                // Insert new student subject with incremented StudentCode
                String insertSql = "INSERT INTO studentsubject (StudentCode, StudentID, SubjectID) VALUES (?, ?, ?)";
                try (PreparedStatement pstInsert = conn.prepareStatement(insertSql)) {
                    pstInsert.setInt(1, studentCode);
                    pstInsert.setInt(2, studentId);
                    pstInsert.setInt(3, SessionSubject.SubjectID);
                    pstInsert.executeUpdate();
                }

                JOptionPane.showMessageDialog(null, "Student successfully assigned to subject!");
                tablestudent(); // Refresh the table or UI
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_jaddstudentActionPerformed

    private void jbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbackActionPerformed
        new SubjectAdmin(this.section, this.id, this.first, this.middle, this.last).setVisible(true);//going back to Subject form
        this.setVisible(false);
    }//GEN-LAST:event_jbackActionPerformed
    private void tablestudent() {
        try {
            String sql = """
            SELECT s.StudentID,
                   CONCAT(s.FirstName, ' ', s.MiddleName, ' ', s.LastName) AS FullName,
                   s.Course, s.Age
            FROM student s
            JOIN studentsubject ss ON s.StudentID = ss.StudentID
            WHERE ss.SubjectID = ?
        """;

            pst = conn.prepareStatement(sql);
            pst.setInt(1, SessionSubject.SubjectID); // Use current subject ID
            rs = pst.executeQuery();

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); // Clear existing table data

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("StudentID"),
                    rs.getString("FullName"),
                    rs.getString("Course"),
                    rs.getInt("Age"),});
                // Hide StudentID and SectionID columns
                jTable1.getColumnModel().getColumn(0).setMinWidth(0);
                jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
                jTable1.getColumnModel().getColumn(0).setWidth(0);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Error loading students: " + e.getMessage());
        }
    }

    private String showSearchableStudentDialog(List<String> studentList) {
        JDialog dialog = new JDialog((Frame) null, "Search and Select Student", true);
        dialog.setSize(400, 300);
        dialog.setLocationRelativeTo(null);

        JTextField searchField = new JTextField();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        JList<String> list = new JList<>(listModel);
        JScrollPane scrollPane = new JScrollPane(list);

        // Load all names initially
        for (String student : studentList) {
            listModel.addElement(student);
        }

        searchField.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                filterList();
            }

            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                filterList();
            }

            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                filterList();
            }

            private void filterList() {
                String filter = searchField.getText().toLowerCase();
                listModel.clear();
                for (String student : studentList) {
                    if (student.toLowerCase().contains(filter)) {
                        listModel.addElement(student);
                    }
                }
            }
        });

        JButton selectBtn = new JButton("Select");
        final String[] selected = {null};
        selectBtn.addActionListener(e -> {
            selected[0] = list.getSelectedValue();
            dialog.dispose();
        });

        JPanel panel = new JPanel(new BorderLayout());
        panel.add(searchField, BorderLayout.NORTH);
        panel.add(scrollPane, BorderLayout.CENTER);
        panel.add(selectBtn, BorderLayout.SOUTH);

        dialog.add(panel);
        dialog.setVisible(true);

        return selected[0];
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jaddstudent;
    private javax.swing.JButton jback;
    private javax.swing.JLabel jimage;
    private javax.swing.JLabel jsectionname;
    private javax.swing.JLabel jsubjectname;
    // End of variables declaration//GEN-END:variables
}
