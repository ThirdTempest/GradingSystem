/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DashboardAdmin;

import Dashboard.*;
import SessionID.*;
import Login.Database;
import Resource.HoverAnimation;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class SubjectAdmin extends javax.swing.JFrame {

    String id;
    String first;
    String middle;
    String last;
    String section;
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    public SubjectAdmin() {
        initComponents();
        conn = Database.conn();
        table();
        ImageIcon logo = new ImageIcon(getClass().getResource("/Resource/aclclogo.png"));//Image
        jimage.setIcon(logo);
        ImageIcon icon = new ImageIcon(getClass().getResource("/Resource/aclcicon.png"));
        setIconImage(icon.getImage());
        HoverAnimation.HoverAnimationSection(jaddsubject);//HoverAnimation class in Resource package
        HoverAnimation.HoverAnimationSection(jedit);
        HoverAnimation.HoverAnimationSection(jdelete);
    }

    SubjectAdmin(String sectionname, String id, String firstname, String middlename, String lastname) {
        this();
        jsection.setText(sectionname);
        this.section = sectionname;
        this.id = id;
        this.first = firstname;
        this.middle = middlename;
        this.last = lastname;

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                new SectionAdmin(id, firstname, middlename, lastname).setVisible(true);
                dispose();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jimage = new javax.swing.JLabel();
        jsection = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jedit = new javax.swing.JButton();
        jdelete = new javax.swing.JButton();
        jback = new javax.swing.JButton();
        jaddsubject = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Subject");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 90, 172));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "E-Code", "Subject Code", "Subject"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 640, 510));

        jPanel1.setBackground(new java.awt.Color(0, 90, 172));

        jimage.setText("jLabel1");

        jsection.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jsection.setText("Section(name)");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setText("Assigning Subject");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("for");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jimage, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jsection)))
                .addContainerGap(349, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jimage, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jsection))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 140));

        jPanel2.setBackground(new java.awt.Color(0, 71, 171));

        jedit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jedit.setText("Edit");
        jedit.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jeditActionPerformed(evt);
            }
        });

        jdelete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jdelete.setText("Delete");
        jdelete.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jdeleteActionPerformed(evt);
            }
        });

        jback.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jback.setText("Back");
        jback.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbackActionPerformed(evt);
            }
        });

        jaddsubject.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jaddsubject.setText("Add Subject");
        jaddsubject.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jaddsubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jaddsubjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addComponent(jback, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jaddsubject, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jdelete, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                        .addComponent(jedit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jaddsubject, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jedit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(jback, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 130, 240, 520));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jaddsubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jaddsubjectActionPerformed
        new SubjectRegistration(this.section, this.id, this.first, this.middle, this.last).setVisible(true); //going to subjectregistration form
        this.setVisible(false);
    }//GEN-LAST:event_jaddsubjectActionPerformed

    private void jeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jeditActionPerformed
        int selectedRow = jTable1.getSelectedRow();//editing subject
        if (selectedRow != -1) {
            String oldSubjectName = jTable1.getValueAt(selectedRow, 0).toString();
            try {
                String getIdSQL = "SELECT SubjectID FROM subject WHERE SubjectName = ? AND SectionID = ?";//getting SubjectID
                pst = conn.prepareStatement(getIdSQL);
                pst.setString(1, oldSubjectName);
                pst.setInt(2, SessionSection.AccessID); // SessionSection for SessionID
                rs = pst.executeQuery();

                if (rs.next()) {
                    int subjectId = rs.getInt("SubjectID");

                    String newSubjectName = JOptionPane.showInputDialog("Enter new subject name:");//asking for new subject name
                    if (newSubjectName != null && !newSubjectName.trim().isEmpty()) {
                        String updateSQL = "UPDATE subject SET SubjectName = ? WHERE SubjectID = ?";//update the new subject name from old one
                        pst = conn.prepareStatement(updateSQL);
                        pst.setString(1, newSubjectName.trim());
                        pst.setInt(2, subjectId);

                        int rowsAffected = pst.executeUpdate();
                        if (rowsAffected > 0) {
                            JOptionPane.showMessageDialog(null, "Subject updated successfully.");
                            table(); // Refresh table
                        } else {
                            JOptionPane.showMessageDialog(null, "Failed to update subject.");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Subject ID not found.");
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a subject to edit.");
        }
    }//GEN-LAST:event_jeditActionPerformed

    private void jdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdeleteActionPerformed
        int selectedRow = jTable1.getSelectedRow();//deleting subject
        if (selectedRow != -1) {
            String subjectName = jTable1.getValueAt(selectedRow, 0).toString();
            try {
                int confirm = JOptionPane.showConfirmDialog(null, //asking for confirmation
                        "Are you sure you want to delete the subject \"" + subjectName + "\"?",
                        "Confirm Delete",
                        JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                    String getIdSQL = "SELECT SubjectID FROM subject WHERE SubjectName = ? AND SectionID = ?"; //get SubjectID
                    pst = conn.prepareStatement(getIdSQL);
                    pst.setString(1, subjectName);
                    pst.setInt(2, SessionSection.AccessID); // from SessionSection from SessionID
                    rs = pst.executeQuery();

                    if (rs.next()) {
                        int subjectId = rs.getInt("SubjectID");

                        String deleteSQL = "DELETE FROM subject WHERE SubjectID = ?";//deletes the subject name from database
                        pst = conn.prepareStatement(deleteSQL);
                        pst.setInt(1, subjectId);

                        int rowsDeleted = pst.executeUpdate();
                        if (rowsDeleted > 0) {
                            JOptionPane.showMessageDialog(null, "Subject deleted successfully.");
                            table(); // Refresh table
                        } else {
                            JOptionPane.showMessageDialog(null, "Failed to delete subject.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Subject not found.");
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a subject to delete.");
        }
    }//GEN-LAST:event_jdeleteActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2 && jTable1.getSelectedRow() != -1) {//clicking Jtable row fuction
            int selectedRow = jTable1.getSelectedRow();
            String subjectName = jTable1.getValueAt(selectedRow, 0).toString(); // from Jtable column

            int sectionID = SessionSection.AccessID;//from SessionSection from SessionID

            try {
                String sql = "SELECT SubjectID FROM subject WHERE SectionID = ? AND SubjectName = ?"; // getting the correct SubjectID based on subject name and section
                pst = conn.prepareStatement(sql);
                pst.setInt(1, sectionID);
                pst.setString(2, subjectName);
                rs = pst.executeQuery();

                if (rs.next()) {
                    String SubjectID = rs.getString("SubjectID");
                    int subjectID = getSubjectID(Integer.parseInt(SubjectID));
                    SessionSubject.SubjectID = subjectID;
                    new StudentAdmin(subjectName, this.section, this.id, this.first, this.middle, this.last).setVisible(true);
                    this.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Subject not found.");
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbackActionPerformed
        new SectionAdmin(this.id, this.first, this.middle, this.last).setVisible(true); // Going back to Section form
        this.setVisible(false);
    }//GEN-LAST:event_jbackActionPerformed
    private void table() { // displaying data in Jtable
        int sectionID = SessionSection.AccessID; // from SessionSection in SessionID package
        try {
            String sql = "SELECT * FROM `subject` WHERE `SectionID`=?";
            pst = conn.prepareStatement(sql);
            pst.setInt(1, sectionID);
            rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            while (rs.next()) {
                model.addRow(new String[]{rs.getString("E-Code"),rs.getString("SubjectCode"),rs.getString("SubjectName")});
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }

    public int getSubjectID(int SubjectID) { // for SessionSubject in SessionID. (SubjectID) becomes static
        String sql = "SELECT * FROM `subject` WHERE `SectionID` = ?";

        try {
            pst = conn.prepareStatement(sql);
            pst.setInt(1, SubjectID);
            rs = pst.executeQuery();

            if (rs.next()) {
                SubjectID = rs.getInt("SubjectID");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error retrieving SubjectID: " + e.getMessage());
        }

        return SubjectID;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubjectAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubjectAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubjectAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubjectAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SubjectAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jaddsubject;
    private javax.swing.JButton jback;
    private javax.swing.JButton jdelete;
    private javax.swing.JButton jedit;
    private javax.swing.JLabel jimage;
    private javax.swing.JLabel jsection;
    // End of variables declaration//GEN-END:variables
}
