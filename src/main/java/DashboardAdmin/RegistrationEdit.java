/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DashboardAdmin;

import Dashboard.Subject;
import Login.Database;
import Resource.HoverAnimation;
import Validation.RegistrationValidation;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.security.MessageDigest;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class RegistrationEdit extends javax.swing.JFrame implements RegistrationValidation {

    String id;
    Connection conn = null;
    PreparedStatement pst = null;

    public RegistrationEdit() {
        initComponents();
        conn = Database.conn();
        HoverAnimation.HoverAnimationSection(jsave);
        ImageIcon icon = new ImageIcon(getClass().getResource("/Resource/aclcicon.png"));
        setIconImage(icon.getImage());
    }

    RegistrationEdit(String id, String user, String pass, String first, String middle, String last, String email, String phone) {
        this();
        this.id = id;
        jusername.setText(user);
        jpassword.setText(pass);
        jfirstname.setText(first);
        jmiddlename.setText(middle);
        jlastname.setText(last);
        jemail.setText(email);
        jphone.setText(phone);

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                new DashboardAdmin().setVisible(true);
                dispose();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jback = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jusername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jpassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jfirstname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jlastname = new javax.swing.JTextField();
        jsave = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jphone = new javax.swing.JTextField();
        jemail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jmiddlename = new javax.swing.JTextField();
        erroruser = new javax.swing.JLabel();
        errorpass = new javax.swing.JLabel();
        errorfirst = new javax.swing.JLabel();
        errormiddle = new javax.swing.JLabel();
        errorlast = new javax.swing.JLabel();
        erroremail = new javax.swing.JLabel();
        errorphone = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Registration Editing");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jback.setText("<---");
        jback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbackActionPerformed(evt);
            }
        });
        getContentPane().add(jback, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setText("Teacher Information");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Username:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, -1, -1));
        getContentPane().add(jusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 230, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Password:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, -1, -1));
        getContentPane().add(jpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 230, 40));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("First Name:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));
        getContentPane().add(jfirstname, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 230, 40));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Middle Name:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Last Name:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, -1, -1));
        getContentPane().add(jlastname, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, 230, 40));

        jsave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jsave.setText("Save");
        jsave.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsaveActionPerformed(evt);
            }
        });
        getContentPane().add(jsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 550, 110, 40));

        jPanel1.setBackground(new java.awt.Color(0, 90, 172));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Phone:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Email:");

        errorpass.setPreferredSize(new java.awt.Dimension(37, 16));

        errorfirst.setPreferredSize(new java.awt.Dimension(37, 16));

        errormiddle.setPreferredSize(new java.awt.Dimension(37, 16));

        errorlast.setPreferredSize(new java.awt.Dimension(37, 16));

        erroremail.setPreferredSize(new java.awt.Dimension(37, 16));

        errorphone.setPreferredSize(new java.awt.Dimension(37, 16));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(105, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(erroremail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jmiddlename, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(jemail)
                    .addComponent(jphone)
                    .addComponent(erroruser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(errorpass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(errorfirst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(errormiddle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(errorlast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(errorphone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(71, 71, 71))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(131, Short.MAX_VALUE)
                .addComponent(erroruser)
                .addGap(47, 47, 47)
                .addComponent(errorpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(errorfirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jmiddlename, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errormiddle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(errorlast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jemail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(erroremail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jphone, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 620));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbackActionPerformed
        this.setVisible(false);
        new DashboardAdmin().setVisible(true);
    }//GEN-LAST:event_jbackActionPerformed

    private void jsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsaveActionPerformed
        String username = jusername.getText();
        String password = jpassword.getText();
        String firstname = jfirstname.getText();
        String middlename = jmiddlename.getText();
        String lastname = jlastname.getText();
        String email = jemail.getText();
        String phone = jphone.getText();

        boolean isValid = registrationvalidation(username, password, firstname, middlename, lastname, email, phone,
                erroruser, errorpass, errorfirst, errormiddle, errorlast, erroremail, errorphone);

        if (!isValid) {
            return;
        }

        try {
            // Hash the password before updating
            String hashedPassword = hashPassword(password);

            String updateSql = "UPDATE teacher SET username = ?, password = ?, FirstName = ?, MiddleName = ?, LastName = ?, email = ?, phonenumber = ? WHERE TeacherID = ?";
            pst = conn.prepareStatement(updateSql);
            pst.setString(1, username);
            pst.setString(2, hashedPassword);
            pst.setString(3, firstname);
            pst.setString(4, middlename);
            pst.setString(5, lastname);
            pst.setString(6, email);
            pst.setString(7, phone);
            pst.setString(8, this.id); // Make sure 'this.id' contains the correct TeacherID

            int updated = pst.executeUpdate();
            if (updated > 0) {
                JOptionPane.showMessageDialog(rootPane, "Teacher information updated!");
                new DashboardAdmin().setVisible(true);
                this.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Update failed, teacher not found!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }

    }//GEN-LAST:event_jsaveActionPerformed

    private String hashPassword(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] hash = md.digest(password.getBytes("UTF-8"));
            StringBuilder sb = new StringBuilder();
            for (byte b : hash) {
                sb.append(String.format("%02x", b));
            }
            return sb.toString();
        } catch (Exception e) {
            throw new RuntimeException("Error hashing password", e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrationEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrationEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrationEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrationEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrationEdit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel erroremail;
    private javax.swing.JLabel errorfirst;
    private javax.swing.JLabel errorlast;
    private javax.swing.JLabel errormiddle;
    private javax.swing.JLabel errorpass;
    private javax.swing.JLabel errorphone;
    private javax.swing.JLabel erroruser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jback;
    private javax.swing.JTextField jemail;
    private javax.swing.JTextField jfirstname;
    private javax.swing.JTextField jlastname;
    private javax.swing.JTextField jmiddlename;
    private javax.swing.JPasswordField jpassword;
    private javax.swing.JTextField jphone;
    private javax.swing.JButton jsave;
    private javax.swing.JTextField jusername;
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean registrationvalidation(String username, String password, String firstname, String middlename, String lastname, String email, String phone, JLabel erroruser, JLabel errorpass, JLabel errorfirst, JLabel errormiddle, JLabel errorlast, JLabel erroremail, JLabel errorphone) {
        boolean isValid = true;
        if (username.isEmpty()) {
            setError(erroruser, "Username is required.");
            isValid = false;
        } else {
            clearError(erroruser);
        }
        if (password.isEmpty() || password.length() < 8) {
            setError(errorpass, "Password must be at least 8 characters.");
            isValid = false;
        } else {
            errorpass.setText("");
        }
        if (firstname.isEmpty()) {
            setError(errorfirst, "First name cannot be empty.");
            isValid = false;
        } else if (!isAlpha(firstname)) {
            setError(errorfirst, "First name must not contain numbers.");
            isValid = false;
        } else {
            clearError(errorfirst);
        }
        if (middlename != null && !middlename.trim().isEmpty()) {
            if (!isAlpha(middlename)) {
                setError(errormiddle, "Middle name must not contain numbers.");
                isValid = false;
            } else {
                clearError(errormiddle);
            }
        } else {
            clearError(errormiddle); // No error if middle name is blank
        }
        if (lastname.isEmpty()) {
            setError(errorlast, "Last name cannot be empty.");
            isValid = false;
        } else if (!isAlpha(lastname)) {
            setError(errorlast, "Last name must not contain numbers.");
            isValid = false;
        } else {
            clearError(errorlast);
        }
        if (email.isEmpty()) {
            setError(erroremail, "Email is required.");
            isValid = false;
        } else if (!ValidEmail(email)) {
            setError(erroremail, "Invalid email format.");
            isValid = false;
        } else {
            clearError(erroremail);
        }
        if (phone == null || !phone.matches("\\d{11}")) {
            setError(errorphone, "Phone number must be 11 digits.");
            isValid = false;
        } else {
            errorphone.setText("");
        }
        return isValid;
    }

    @Override
    public boolean isAlpha(String str) {
        // Allows only uppercase/lowercase letters and spaces
        return str != null && str.matches("^[A-Za-z ]+$");
    }

    @Override
    public boolean ValidEmail(String email) {
        return email.matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$");
    }

    @Override
    public void setError(JLabel label, String message) {
        label.setText(message);
        label.setForeground(java.awt.Color.RED);
    }

    @Override
    public void clearError(JLabel label) {
        label.setText("");
    }

    @Override
    public boolean isNumeric(String str) {
        try {
            Integer.parseInt(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
}
